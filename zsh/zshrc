#              _
#             | |
#      _______| |__  _ __ ___
#     |_  / __| '_ \| '__/ __|
#    _ / /\__ \ | | | | | (__
#   (_)___|___/_| |_|_|  \___|

export DOTFILES="$HOME/dotfiles"

source $DOTFILES/zsh/plugins.zsh
source $DOTFILES/zsh/aliases.zsh
source $DOTFILES/zsh/functions.zsh
source ${ASDF_DIR}/plugins/ivm-node/util/ivm_environment_manager.sh


# Vim for life
export EDITOR=vim

ENABLE_CORRECTION="true"
export LANG=en_US.UTF-8

# history
SAVEHIST=100000

# Basic auto/tab complete:
autoload -U compinit
zstyle ':completion:*' menu select
zmodload zsh/complist
compinit
_comp_options+=(globdots) # Include hidden files.

# vi mode
bindkey -v
export KEYTIMEOUT=1

# Edit line in vim with ctrl-e:
autoload edit-command-line
zle -N edit-command-line
bindkey '^e' edit-command-line

# Use vim keys in tab complete menu:
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history
bindkey -v '^?' backward-delete-char

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='code'
else
  export EDITOR='code'
fi

# Overcoming Muscle Memory
if type nvim >/dev/null 2>&1; then
  alias vim='nvim'
fi

autoload -U edit-command-line
zle -N edit-command-line

bindkey '^E' edit-command-line                   # Opens Vim to edit current command line
bindkey '^R' history-incremental-search-backward # Perform backward search in command line history
bindkey '^S' history-incremental-search-forward  # Perform forward search in command line history
bindkey '^P' history-search-backward             # Go back/search in history (autocomplete)
bindkey '^N' history-search-forward              # Go forward/search in history (autocomplete)

# enable control-s and control-q
stty start undef
stty stop undef
setopt noflowcontrol


export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"                   # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" # This loads nvm bash_completion

export ASDF_DIR="$HOME/.asdf"
# append completions to fpath
fpath=(${ASDF_DIR}/completions $fpath)
# initialise completions with ZSH's compinit
autoload -Uz compinit && compinit
autoload -Uz add-zsh-hook
add-zsh-hook precmd ivm_setup_environment

export TOOLVER_DP_TOKEN=""
# export PATH="$(yarn global bin):$PATH"
# export PATH="$HOME/.cargo/bin:$PATH"

export LANGUAGE=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

export GPG_TTY=$(tty)
export LEGO_HOME="$HOME/lego"
export PATH="$LEGO_HOME:$PATH"

# RUNNING=$(ps aux | grep dockerd | grep -v grep)
# if [[ -z "$RUNNING" ]]; then
#   sudo service docker start
# fi

# bun completions
# [ -s "/home/alejandro/.bun/_bun" ] && source "/home/alejandro/.bun/_bun"

# bun
# export BUN_INSTALL="$HOME/.bun"
# export PATH="$BUN_INSTALL/bin:$PATH"

# pnpm
export PNPM_HOME="/home/alejandro/.local/share/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end